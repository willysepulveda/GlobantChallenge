{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "adfpocstudio"
		},
		"LS_DBPoc_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'LS_DBPoc'"
		},
		"LS_sablpoc_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'LS_sablpoc'"
		},
		"LS_DBPoc_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "servpoc.database.windows.net"
		},
		"LS_DBPoc_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "DBPoc"
		},
		"LS_DBPoc_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "wsepulve"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/LS_DBPoc')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('LS_DBPoc_properties_typeProperties_server')]",
					"database": "[parameters('LS_DBPoc_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('LS_DBPoc_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('LS_DBPoc_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_sablpoc')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('LS_sablpoc_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_DBPoc')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_DBPoc",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"table": {
						"type": "string"
					},
					"schema": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@dataset().schema",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().table",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_DBPoc')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_ExcelPoc')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_sablpoc",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"file": {
						"type": "string"
					},
					"sheet": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": {
						"value": "@dataset().sheet",
						"type": "Expression"
					},
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@concat(dataset().file,'.xlsx')",
							"type": "Expression"
						},
						"container": "pocglobant"
					}
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_sablpoc')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_HiredEmployees_Tranformation')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_DBPoc",
								"type": "DatasetReference"
							},
							"name": "SRCStageHiredEmployees"
						}
					],
					"sinks": [
						{
							"linkedService": {
								"referenceName": "LS_DBPoc",
								"type": "LinkedServiceReference"
							},
							"name": "snkHiredEmployees"
						}
					],
					"transformations": [
						{
							"name": "drvSplitName"
						},
						{
							"name": "drvNullImputation"
						}
					],
					"scriptLines": [
						"source(output(",
						"          EmployeeID as integer,",
						"          Name as string,",
						"          HireDate as timestamp,",
						"          JobID as integer,",
						"          DepartmentID as integer,",
						"          CreatedDate as timestamp",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     query: 'SELECT * FROM GPStage.StageHiredEmployees',",
						"     format: 'query') ~> SRCStageHiredEmployees",
						"SRCStageHiredEmployees derive(FirstName = split(Name, ' ')[1],",
						"          LastName = split(Name, ' ')[2]) ~> drvSplitName",
						"drvSplitName derive(HireDate_fix = toTimestamp(iifNull(toString(HireDate),'1900-01-01'),'yyyy-MM-dd'),",
						"          JobID_fix = iifNull(JobID,0),",
						"          DepartmentID_fix = iifNull(DepartmentID,0),",
						"          FirstName_fix = iifNull(FirstName,'No First Name Register'),",
						"          LastName_fix = iifNull(LastName,'No LastName Name Register')) ~> drvNullImputation",
						"drvNullImputation sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          EmployeeID as integer,",
						"          FirstName as string,",
						"          LastName as string,",
						"          HireDate as timestamp,",
						"          JobID as integer,",
						"          DepartmentID as integer,",
						"          CreatedDate as timestamp",
						"     ),",
						"     format: 'table',",
						"     store: 'sqlserver',",
						"     schemaName: 'GlobantPoc',",
						"     tableName: 'HiredEmployees',",
						"     preSQLs:['TRUNCATE TABLE GlobantPoc.HiredEmployees'],",
						"     insertable: true,",
						"     updateable: false,",
						"     deletable: false,",
						"     upsertable: false,",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          HireDate = HireDate_fix,",
						"          FirstName = FirstName_fix,",
						"          LastName = LastName_fix,",
						"          JobID = JobID_fix,",
						"          DepartmentID = DepartmentID_fix,",
						"          CreatedDate",
						"     )) ~> snkHiredEmployees"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_DBPoc')]",
				"[concat(variables('factoryId'), '/linkedServices/LS_DBPoc')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Globant_ImportData')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CP_department",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "TRUNCATE TABLE GlobantPoc.Departments;",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"type": "String",
											"ordinal": 2
										},
										"sink": {
											"name": "DepartmentName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ExcelPoc",
								"type": "DatasetReference",
								"parameters": {
									"file": "departments",
									"sheet": "departments"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_DBPoc",
								"type": "DatasetReference",
								"parameters": {
									"table": "Departments",
									"schema": "GlobantPoc"
								}
							}
						]
					},
					{
						"name": "CP_StageHiredEmployee",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "TRUNCATE TABLE GPStage.StageHiredEmployees ;",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"type": "String",
											"ordinal": 2
										},
										"sink": {
											"name": "Name",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 3
										},
										"sink": {
											"name": "HireDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 4
										},
										"sink": {
											"name": "JobID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 5
										},
										"sink": {
											"name": "DepartmentID",
											"type": "Int32",
											"physicalType": "int"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ExcelPoc",
								"type": "DatasetReference",
								"parameters": {
									"file": "hired_employees",
									"sheet": "hired_employees"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_DBPoc",
								"type": "DatasetReference",
								"parameters": {
									"table": "StageHiredEmployees",
									"schema": "GPStage"
								}
							}
						]
					},
					{
						"name": "CP_Job",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "TRUNCATE TABLE GlobantPoc.Jobs",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"type": "String",
											"ordinal": 2
										},
										"sink": {
											"name": "JobTitle",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ExcelPoc",
								"type": "DatasetReference",
								"parameters": {
									"file": "jobs",
									"sheet": "jobs"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_DBPoc",
								"type": "DatasetReference",
								"parameters": {
									"table": "Jobs",
									"schema": "GlobantPoc"
								}
							}
						]
					},
					{
						"name": "exec DF_HiredEmployees_Tranformation",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "CP_StageHiredEmployee",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_HiredEmployees_Tranformation",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"SRCStageHiredEmployees": {
										"table": "StageHiredEmployees",
										"schema": "GPStage"
									},
									"snkHiredEmployees": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_ExcelPoc')]",
				"[concat(variables('factoryId'), '/datasets/DS_DBPoc')]",
				"[concat(variables('factoryId'), '/dataflows/DF_HiredEmployees_Tranformation')]"
			]
		}
	]
}